#!/usr/bin/env python3

#
#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#


import os
import sys
import json
import agent
import agent.tasks
import secrets

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Setup default values
def generate_random_hex_string(length):
    return secrets.token_hex(length)

# Talk with agent using file descriptor.
# Setup configuration from user input.
agent.set_env("TRAEFIK_PATH", generate_random_hex_string(50))

# Make sure everything is saved inside the environment file
# just before starting systemd unit
agent.dump_env()

# Find default traefik instance for current node
default_traefik_id = agent.resolve_agent_id('traefik@node')
if default_traefik_id is None:
    sys.exit(2)

# Configure traefik virtual host
response = agent.tasks.run(
    agent_id=default_traefik_id,
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'],
        'url': f'http://127.0.0.1:{os.environ["TCP_PORT"]}',
        'path': path,
        'http2https': True
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)
